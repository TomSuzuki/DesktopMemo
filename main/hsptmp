#include "gdi32.as"
#include "user32.as"
#include "obj.as"
#include "lib.hsp"
#include "lib3.hsp"

#define ctype hexRGB(%1,%2,%3) (%1 | %2 << 8 | %3 << 16)
#define ctype decRGB(%1) %1>>16 & 0xFF,%1>>8 & 0xFF,%1 & 0xFF
#define ctype hexBGR(%1) ((%1 & 0xFF)<<16 | (%1>>8 & 0xFF)<<8 | (%1>>16 & 0xFF))
#define ctype max(%1,%2) (%1<%2)*%2+(%1>=%2)*%1

#enum ImgButton	= 0
#enum ScrSetting//別アプリケーションでいいのでは？？
#enum ScrMemoBase

#packopt hide 1

	// 初期化
	defaultFront = 0

	// コンフィグのロード
	notesel notedata
	enoteload "config.csv"
	SetConfigData notedata
		ThemeColor1 = int("$"+LoadConfig("ThemeColor1","0x555555"))
		ThemeColor2 = int("$"+LoadConfig("ThemeColor2","0xCCCCCC"))
		ThemeColor3 = int("$"+LoadConfig("ThemeColor3","0x000000"))
		SystemFont = LoadConfig("SystemFont","メイリオ")
		SystemFontSize = int(LoadConfig("SystemFontSize","14"))
	SaveConfig "config.csv"

	// 初期化
	FlgSetup = 0
	dimtype MsgData,vartype("str")
	dimtype FlgSetup,vartype("int")
	dimtype hMesbox,vartype("int")
	dimtype idMesbox,vartype("int")
	dimtype dButton,vartype("int")
	dimtype idButton,vartype("int")
	dimtype bmButton,vartype("int")
	dimtype ToggleFront,vartype("int")
	dimtype MsgNote,vartype("str")

	// コマンド関連の設定
	onexit *Label_Exit

	// ボタン
	buffer ImgButton,640,640
	gmode 7,32,32
		pos 32,0	:picload "image/button_add.bmp",1
		pos 96,0	:picload "image/button_del.bmp",1
		pos 160,0	:picload "image/button_front.bmp",1
		color decRGB(ThemeColor3)
			boxf 0,0,32,32
			boxf 64,0,96,32
			boxf 128,0,160,32
		color decRGB(ThemeColor1)
			boxf 0,32,160,64
		pos -1,32	:gcopy 0,0,0,32,32
		pos 63,32	:gcopy 0,64,0,32,32
		pos 127,32:gcopy 0,128,0,32,32
		color decRGB(ThemeColor2)
			boxf 0,64,160,96
		pos -1,64	:gcopy 0,0,0,32,32
		pos 63,64	:gcopy 0,64,0,32,32
		pos 127,64:gcopy 0,128,0,32,32
		color decRGB(ThemeColor2)
			boxf 0,96,160,128
		pos -1,96	:gcopy 0,0,0,32,32
		pos 63,96	:gcopy 0,64,0,32,32
		pos 127,96:gcopy 0,128,0,32,32
		
	// データをロード、無ければウィンドウを1つ
	dirlist list,"memo/*.dat",0
	if(stat == 0){
		FlgNewMemo = 1
		gosub*Label_AddWindow
	}else{
		FlgNewMemo = 0
		repeat noteinfo(0)
			notesel list
			noteget file,cnt
			noteunsel
			exist "memo/"+file
			if(strsize!=-1){
				notesel notedata
				noteload "memo/"+file
				noteget data,0
				split data,",",x,y,t
				m = ""
				repeat noteinfo(0)-1,1
					noteget data,cnt
					if(cnt != 1):m = m + "\n"
					m = m + data
				loop
				noteunsel
				FlgNewMemo = 0
				MsgNote(ginfo_newid) = "memo/"+file
				defaultFront = int(t)
				gosub*Label_AddWindow
				ToggleFront(ginfo(3)) = int(t)
				MsgData(ginfo(3)) = m
				width ,,int(x),int(y)
				gsel ginfo(3),1+ToggleFront(ginfo(3))
				objprm idMesbox(ginfo(3)),MsgData(ginfo(3))
			}
		loop
		noteunsel
	}
	
	stop

// 画面追加
*Label_AddWindow
	// 画面
	await
	bgscr max(ginfo_newid,ScrSetting),ginfo(20),ginfo(21),2,ginfo_wx1+24,ginfo_wy1+24
	gsel ginfo(3),-1
	title "Desktop Memo"
	ToggleFront(ginfo(3)) = defaultFront
	;SetWindowLong hwnd,-16,GetWindowLong(hwnd,-16) | $40000
	width 280,220

	// 描画
	color decRGB(ThemeColor1):boxf
	color decRGB(ThemeColor2):boxf 1,32,ginfo_winx-2,ginfo_winy-2

	// メッセージボックスの設置と設定
	objmode 2,0:font SystemFont,SystemFontSize
	pos 5,32+5
	mesbox MsgData(ginfo(3)),ginfo_winx-10,ginfo_winy-32-10,1,0xFFFFFF
	idMesbox(ginfo(3)) = stat
	hMesbox(ginfo(3)) = objinfo(stat,2)
	ShowScrollBar hMesbox(ginfo(3)),3,0
	SetWindowLong hMesbox(ginfo(3)),-20,0
	SetWindowPos hMesbox(ginfo(3)),0,0,0,0,0,$27
	CreateSolidBrush hexBGR(ThemeColor2)
	hBrush(ginfo(3)) = stat

	// ボタンの設置
	objsize 32,32
	objimage 0,0,32,0,64,0,96				:pos 0,0						:button gosub "",*Label_Button:idButton(length(idButton)) = stat:dButton(length(dButton)) = 1:bmButton(length(bmButton)) = objinfo_bmscr(stat)
	objimage 0,64,32,64,64,64,96		:pos ginfo_winx-32,0:button gosub "",*Label_Button:idButton(length(idButton)) = stat:dButton(length(dButton)) = 2:bmButton(length(bmButton)) = objinfo_bmscr(stat)
	if(1 == ToggleFront(ginfo(3))){
		objimage 0,128,96,128,64,128,96
	}else{
		objimage 0,128,32,128,64,128,96
	}
	pos ginfo_winx-64,0:button gosub "",*Label_Button:idButton(length(idButton)) = stat:dButton(length(dButton)) = 3:bmButton(length(bmButton)) = objinfo_bmscr(stat)

	// ファイル名の決定
	if(FlgNewMemo){
		repeat
			MsgNote(ginfo(3)) = strf("memo/%04d%02d%02d%02d%02d%02d%02d.dat",gettime(0),gettime(1),gettime(3),gettime(4),gettime(5),gettime(6),cnt)
			exist MsgNote(ginfo(3))
			if(strsize == -1):break
			await 1
		loop
		gsel ginfo(3),1+ToggleFront(ginfo(3))
	}

	// 設置完了（フラグの意味なくなってると思う）
	FlgSetup(ginfo(3)) = 1

	// 画面依存のコマンド
	oncmd gosub *Label_ResizeWindow,0x00005
	oncmd gosub *Label_Click,0x0201
	oncmd gosub *Label_CtrlEdit,0x0133
	onkey gosub *Label_Key

	return

// ウィンドウを削除
*Label_DelWindow

	// データファイルを削除
	exist MsgNote(ginfo(3))
	if(strsize != -1):delete MsgNote(ginfo(2))

	// 画面の破棄
	gsel ginfo(3),-1
	ToggleFront(ginfo(3)) = -1

	// すべてのウィンドウが非表示なら終了
	Flg = 1
	repeat ginfo_newid-ScrMemoBase,ScrMemoBase
		if(ToggleFront(cnt) != -1){
			Flg = 0
			gsel cnt,0
			break
		}
	loop
	if(Flg):end

	return

// ボタン
*Label_Button
	s = stat
	ngsel = ginfo_sel
	gsel ginfo_act
	mref bmscr,67
	foreach(idButton)
		if(s == idButton(cnt) && bmButton(cnt) == varptr(bmscr)){
			switch(dButton(cnt))
			case 1
				FlgNewMemo = 1
				gosub*Label_AddWindow
				swbreak
			case 2
				gosub*Label_DelWindow
				swbreak
			case 3
				ToggleFront(ginfo(3)) = (ToggleFront(ginfo(3)) == 0)
				gsel ginfo(3),1+ToggleFront(ginfo(3))
				c = cnt
				gosub*Label_Save
				gosub*Label_UpdateButton
				swbreak
			swend
			break
		}
	loop

	gsel ngsel

	return

// ボタンの更新（最前面）
*Label_UpdateButton
	clrobj s
	if(1 == ToggleFront(ginfo(3))){
		objimage 0,128,96,128,64,128,96
	}else{
		objimage 0,128,32,128,64,128,96
	}
	pos ginfo_winx-64,0:button gosub "",*Label_Button:idButton(length(c)) = stat:dButton(length(c)) = 3
	return

// ウィンドウリサイズ（リサイズの不具合で使ってない）
*Label_ResizeWindow
	if(FlgSetup(ginfo(3)) == 0):return
	color decRGB(ThemeColor1):boxf
	color decRGB(ThemeColor2):boxf 0,32,ginfo_winx,ginfo_winy
	size = ginfo_winx-10,ginfo_winy-32-10,0,0
	resizeobj idMesbox(ginfo(3)),size,1
	gosub*Label_Save
	return

// メッセージボックスの更新
*Label_CtrlEdit
	if(ginfo(3) < 1):return
	if(FlgSetup(ginfo(3)) == 0):return
	if(hMesbox(ginfo(3)) != lparam){
		repeat length(hMesbox)-1,1
			if(hMesbox(cnt) == lparam){
				gsel cnt
				break
			}
		loop
		SetTextColor wparam,ThemeColor3
		SetBkColor wparam,hexBGR(ThemeColor2)
		gosub*Label_Save
	}else{
		SetTextColor wparam,ThemeColor3
		SetBkColor wparam,hexBGR(ThemeColor2)
		gosub*Label_Save
	}
	return hBrush(ginfo(3))

// 保存
*Label_Save
	notedata = strf("%d,%d,%d\n%s",ginfo_wx1,ginfo_wy1,ToggleFront(ginfo(3)),MsgData(ginfo(3)))
	notesel notedata
	notesave MsgNote(ginfo(3))
	noteunsel
	return

// クリックしたときの処理
*Label_Click
	gsel ginfo(2),0
	sendmsg hwnd,0x00A1,2,0
	gosub*Label_Save
	return

// キーの設定
*Label_Key
	getkey Ctrl,17
	if(Ctrl == 1){
		switch(iParam)
		case 'A'	// 全選択
			sendmsg hMesbox(ginfo(3)),0x00B1,0,-1
			swbreak
		swend
	}
	return

// 終了時の処理
*Label_Exit
	foreach(hBrush)
		DeleteObject hBrush(cnt)
	loop
	end
	