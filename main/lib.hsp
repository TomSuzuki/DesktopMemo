//注意
//※deleteobjはexe作成時に消す

;deleteobj

;#include "d3m.hsp"	//(lib4 include時は消す)
#include "gdi32.as"

#module
#defcfunc unoteload str p1
	key = 78

	notesel s
	exist p1
	if strsize = -1{
		data = ""
		notesel data
		notesave p1
		noteunsel
	}
	noteload p1
	noteunsel

	return F_ango(s,key)
#deffunc unotesave str p1
	key = 78

	s = ""
	repeat noteinfo(0)
		noteget data,cnt
		s = s + data + "\n"
	loop
	s = A_ango(s,key)
	notesel s
	notesave p1
	noteunsel
	
	return
#global

#module
#deffunc boxg int p1,int p2,int p3,int p4
	x1 = 0
	y1 = 0
	x2 = ginfo_winx
	y2 = ginfo_winy
	if p1  ! "":x1 = p1
	if p2  ! "":y1 = p2
	if p3  ! "":x2 = p3
	if p4  ! "":y2 = p4
	
	arrx = x1,x1,x2,x2
	arry = y1,y2,y2,y1
	gsquare -1,arrx,arry
	return
#global

#module
#deffunc FontAdd2 str p1
	notesel buf
	noteload p1
	AddFontMemResourceEx varptr(buf), strsize, 0, varptr(pcFonts)
	hFont = stat
	return
#deffunc FontDel str p1
	RemoveFontMemResourceEx p1
	return
#global

#module
#deffunc boxl int p1,int p2,int p3,int p4
;四角のみ
	line p1,p2,p3,p2
	line p1,p4,p3,p4
	line p3,p2,p3,p4
	line p1,p2-1,p1,p4
	return
#deffunc boxl2 int p1,int p2,int p3,int p4,int p5,int p6,int p7,int p8
;四点を結ぶ
	line p1,p2,p3,p4
	line p3,p4,p5,p6
	line p5,p6,p7,p8
	line p7,p8,p1,p2
	return
#deffunc pbox int p1,int p2
	boxf ginfo_cx+p1/2,ginfo_cy+p2/2,ginfo_cx-p1/2,ginfo_cy-p2/2
	return
#deffunc FontAdd str FontFileName
	fn= FontFileName : pfn=varptr(fn)
	AddFontResourceA pfn
	return
#deffunc bokasi
	buf = ginfo(3)
	gmode 4,960,640,80
	repeat 3,-1
	ccnt=cnt
	repeat 3,-1
	pos cnt,ccnt:gcopy buf
	loop
	loop
	return
#deffunc ctmes str p1,int p2
	cx=ginfo_cx
	cy=ginfo_cy
	r=ginfo_r
	b=ginfo_b
	g=ginfo_g
	repeat 3
		x=cnt*p2-p2
		repeat 3
			y=cnt*p2-p2
			pos x+cx,y+cy:tmes p1
		loop
	loop
	color 255,255,255:pos cx,cy:tmes p1
	color r,g,b
	return
#deffunc tmes str p1
	s1 = ginfo(22)	;カレント座標(x)
	s2 = ginfo(23)	;カレント座標(y)
	s3 = ginfo(20)	;解像度(x)
	s4 = ginfo(21)	;解像度(y)
	pos s3,s4:mes p1
	s5 = ginfo(14)/2 ;表示(x)
	s6 = ginfo(15)/2 ;表示(y)
	pos s1 - s5,s2 - s6:mes p1
	pos s1,s2+(s6*2)+4
	return
#deffunc tmesUnder str p1	//y座標はginfo_cyを下にする（edmesと同じ高さ）
	s1 = ginfo(22)	;カレント座標(x)
	s2 = ginfo(23)	;カレント座標(y)
	s3 = ginfo(20)	;解像度(x)
	s4 = ginfo(21)	;解像度(y)
	pos s3,s4:mes p1
	s5 = ginfo(14)/2 ;表示(x)
	s6 = ginfo(15)	 ;表示(y)
	pos s1 - s5,s2 - s6:mes p1
	pos s1,s2
	return
#deffunc tmesOver str p1	//y座標はginfo_cyを上にする（mesと同じ高さ）
	s1 = ginfo(22)	;カレント座標(x)
	s2 = ginfo(23)	;カレント座標(y)
	s3 = ginfo(20)	;解像度(x)
	s4 = ginfo(21)	;解像度(y)
	pos s3,s4:mes p1
	s5 = ginfo(14)/2 ;表示(x)
	s6 = 0					 ;表示(y)
	pos s1 - s5,s2 - s6:mes p1
	pos s1,s2+(s6*2)+4
	return
#deffunc cmes str p1,int p2
	cx=ginfo_cx
	cy=ginfo_cy
	r=ginfo_r
	b=ginfo_b
	g=ginfo_g
	repeat 3
		x=cnt*p2-p2
		repeat 3
			y=cnt*p2-p2
			pos x+cx,y+cy:mes p1
		loop
	loop
	color 255,255,255:pos cx,cy:mes p1
	color r,g,b
	return
#deffunc bmes str p1,int p2
	cx=ginfo_cx
	cy=ginfo_cy
	r=ginfo_r
	b=ginfo_b
	g=ginfo_g
	color 255,255,255
	repeat 3
		x=cnt*p2-p2
		repeat 3
			y=cnt*p2-p2
			pos x+cx,y+cy:mes p1
		loop
	loop
	color r,g,b:pos cx,cy:mes p1
	return
#deffunc notetmes str p1
	notedata = p1
	notesel notedata
	repeat noteinfo(0)
		noteget data,cnt
		tmes str(data)
	loop
	return
#deffunc notetmes2 str p1
	cx = ginfo_cx
	cy = ginfo_cy
	sy = ginfo_sy+2000
	pos cx,sy
	notedata = p1
	notesel notedata
	repeat noteinfo(0)
		noteget data,cnt
		tmes str(data)
	loop
	ly = (ginfo_cy - sy) / 2
	pos cx,cy-ly
	repeat noteinfo(0)
		noteget data,cnt
		tmes str(data)
	loop
	return
#deffunc notectmes2 str p1,int p2
	cx = ginfo_cx
	cy = ginfo_cy
	sy = ginfo_sy+2000
	pos cx,sy
	notedata = p1
	notesel notedata
	repeat noteinfo(0)
		noteget data,cnt
		tmes str(data)
	loop
	ly = (ginfo_cy - sy) / 2
	pos cx,cy-ly
	repeat noteinfo(0)
		noteget data,cnt
		ctmes str(data),p2
	loop
	return
#deffunc cmes2 str p1,int p2,int p3,int p4,int p5
	cx=ginfo_cx
	cy=ginfo_cy
	r=ginfo_r
	b=ginfo_b
	g=ginfo_g
	repeat 3
		x=cnt*p2-p2
		repeat 3
			y=cnt*p2-p2
			pos x+cx,y+cy:mes p1
		loop
	loop
	color p3,p4,p5:pos cx,cy:mes p1
	color r,g,b
	return
#deffunc ctmes2 str p1,int p2,int p3,int p4,int p5
	cx=ginfo_cx
	cy=ginfo_cy
	r=ginfo_r
	b=ginfo_b
	g=ginfo_g
	repeat 3
		x=cnt*p2-p2
		repeat 3
			y=cnt*p2-p2
			pos x+cx,y+cy:tmes p1
		loop
	loop
	color p3,p4,p5:pos cx,cy:tmes p1
	color r,g,b
	return
#deffunc zmes str p1,int p2
	cx=ginfo_cx
	cy=ginfo_cy
	r=ginfo_r
	b=ginfo_b
	g=ginfo_g
	color r@,g@,b@
	repeat 3
		x=cnt*p2-p2
		repeat 3
			y=cnt*p2-p2
			pos x+cx,y+cy:mes p1
		loop
	loop
	color r,g,b:pos cx,cy:mes p1
	return
#deffunc ztmes str p1,int p2
	cx=ginfo_cx
	cy=ginfo_cy
	r=ginfo_r
	b=ginfo_b
	g=ginfo_g
	color r@,g@,b@
	repeat 3
		x=cnt*p2-p2
		repeat 3
			y=cnt*p2-p2
			pos x+cx,y+cy:tmes p1
		loop
	loop
	color r,g,b:pos cx,cy:tmes p1
	return
#deffunc circle2 int p1,int p2,int p3,int p4
	circle p1-p3,p2-p3,p1+p3,p2+p3,p4
	return
#deffunc tcircle int p1,int p2
	circle ginfo_cx-p1,ginfo_cy-p1,ginfo_cx+p1,ginfo_cy+p1,p2
	return
#deffunc limfps int fps, int fmax
	wlim = 1000.0*fps/(fmax*fmax) + offset_time-d3timer()
	if wlim < 1 : wlim = 1
	offset_time = wlim + d3timer()
	await wlim
	return str(wlim)
#deffunc enoteload str p1
	exist p1
	if strsize=-1{
		data=""
		notesel data
		notesave p1
	}
	notesel notedata@
	noteload p1
	return
#deffunc fnoteload str p1
	exist p1
	if strsize=-1{
		notesel fnotedata@
		notesave p1
	}
	notesel notedata@
	noteload p1
	return
#deffunc vnoteload str p1
	i = 0
	exist p1
	if strsize=-1{
		i = 1
	}else{
		notesel notedata@
		noteload p1
		i = 0
	}
	return i
#defcfunc dkakudo double p1, double p2, double p3, double p4
		yo=(0.0+p1-p3)
		ta=(0.0+p2-p4)
		if ta ! 0{
			kai = 0.0+(atan(yo/ta)*180/3.141592653589793238462643383279)
			if p2-p4<0:kai=0.0+180-kai
			if p2-p4>0:kai=0.0-kai
		}
		if p2=p4:if p1<p3:kai=90:else:kai=270
		if p1=p3 && p2=p4:kai=0
	return 0.0+kai
#deffunc f_out_in int p1,int p2,int p3
	screen_x = 640
	screen_y = 480
	gsel 0
	await 10
	repeat p3,1
	redraw 0
	gmode 0,screen_x,screen_y
	pos 0,0
	gcopy p2
	color 255,255,254
	gmode 4,screen_x,screen_y,255.0-(0.0+cnt)/p3*255
	pos 0,0
	gcopy p1
	await 1
	redraw 1
	loop
	return
#deffunc wipe_slide int _p1, int _p2
	;ワイプ(カーテン)
	;wipe_slide 転送元id,待ち時間
	wt=_p2:if wt=0 : wt=48
	mx=-32:repeat 60
		redraw 0
		repeat 32
		a=cnt*20:x=cnt+mx:if x>20 : x=-1
		if x>0 : pos a,0 : gmode 0,x,480 : gcopy _p1,a,0
		loop
		redraw 1
	await wt
	mx+:loop
	return
#global

#module
#deffunc ctext int _p1
	stwait=_p1
	return
#deffunc cemes str _p1
;emes + cmes
	cx=ginfo_cx
	cy=ginfo_cy
	s3 = ginfo(20)	;解像度(x)
	s4 = ginfo(21)	;解像度(y)
	pos s3,s4:mes _p1
	pos_set_yb@=pos_set_y@
	pos_set_x@=cx
	pos_set_y@=cy+ginfo(15)
	pos cx,cy
	
	mesmax=strlen(_p1)
	if mesmax<=0 : return
	mestmp=_p1
	messg=""
	mescur=0
	a=0
	orgx=ginfo_cx
	if ( stmode ) {
		strval2=ginfo_r
		stgval2=ginfo_g
		stbval2=ginfo_b
	}
	if stwait<=0 {
		x=ginfo_cx:y=ginfo_cy
		messg=mestmp
		gosub *emes_aft
		return
	}
	repeat
		if mescur>=mesmax : break
		x=ginfo_cx:y=ginfo_cy
		a=peek(mestmp,mescur)
		mescur++
		if a<32 {
			if a=13 {
				if peek(mestmp,mescur)=10 : mescur++
				cmes "":pos orgx,1
			}
			continue
		}
		poke messg,0,a
		poke messg,1,0
		if a>=128 {
			poke messg,1,peek(mestmp,mescur)
			poke messg,2,0
			mescur++
		}
		gosub *emes_aft
		pos x+ginfo_mesx,y
		await stwait
	loop
	cmes "":pos orgx,1
	return
	
*emes_aft
	if stmode=0 {
		cmes messg,1
		return
	}
	if stmode=1 {
		pos x+stdiff,y+stdiff
		color strval,stgval,stbval
		cmes messg,1
		pos x,y
		color strval2,stgval2,stbval2
		cmes messg,1
		return
	}
	if stmode=2 {
		color strval,stgval,stbval:
		pos x+stdiff,y:mes messg
		pos x-stdiff,y:mes messg
		pos x,y-stdiff:mes messg
		pos x,y+stdiff:mes messg
		pos x,y
		color strval2,stgval2,stbval2
		cmes messg,1
		return
	}
	return
#global

#module
#deffunc text int _p1
	stwait=_p1
	return
#deffunc emes str _p1

	;	１文字づつゆっくりと文字列を表示する
	;	(mes命令と同様の動作)
	;	emes 表示テキスト
	;
	mesmax=strlen(_p1)
	if mesmax<=0 : return
	mestmp=_p1
	messg=""
	mescur=0
	a=0
	orgx=ginfo_cx
	if ( stmode ) {
		strval2=ginfo_r
		stgval2=ginfo_g
		stbval2=ginfo_b
	}

	if stwait<=0 {
		x=ginfo_cx:y=ginfo_cy
		messg=mestmp
		gosub *emes_aft
		return
	}

	repeat
		if mescur>=mesmax : break
		x=ginfo_cx:y=ginfo_cy
		a=peek(mestmp,mescur)
		mescur++
		if a<32 {
			if a=13 {
				if peek(mestmp,mescur)=10 : mescur++
				mes "":pos orgx
			}
			continue
		}
		poke messg,0,a
		poke messg,1,0
		if a>=128 {
			poke messg,1,peek(mestmp,mescur)
			poke messg,2,0
			mescur++
		}
		gosub *emes_aft
		pos x+ginfo_mesx,y
		await stwait
	loop

	mes "":pos orgx
	return

*emes_aft
	if stmode=0 {
		mes messg
		return
	}
	if stmode=1 {
		pos x+stdiff,y+stdiff
		color strval,stgval,stbval
		mes messg
		pos x,y
		color strval2,stgval2,stbval2
		mes messg
		return
	}
	if stmode=2 {
		color strval,stgval,stbval:
		pos x+stdiff,y:mes messg
		pos x-stdiff,y:mes messg
		pos x,y-stdiff:mes messg
		pos x,y+stdiff:mes messg
		pos x,y
		color strval2,stgval2,stbval2
		mes messg
		return
	}
	return
#global

#module
#defcfunc A_ango str p1, int p2
	sdim MOJI,32000
	sdim ANGOU,32000
	D = p2
	MOJI = p1
	nagasa = strlen(MOJI)
	repeat nagasa
		a = peek(MOJI,cnt)
		a = a + D
		poke ANGOU,cnt,a
	loop
	return ANGOU
#defcfunc F_ango str p1, int p2
	sdim MOJI,32000
	sdim HUKUGOU,32000
	D = p2
	MOJI = p1
	nagasa = strlen(MOJI)
	repeat nagasa
		a = peek(MOJI,cnt) - D
		poke HUKUGOU,cnt,a
	loop
	return HUKUGOU
#global

	;A_ango(暗号化したい文字,ID)
	;F_ango(暗号化された文字,ID)
	
#module
#defcfunc select_mode int p1,int p2,int p3
	mode = p1
	key_z@ = 0
	key_x@ = 0
	returns@ = 0
	mode_set@ = 0
	if ginfo(2)=0{
		getkey ku,38:getkey kd,40:getkey kx,88:getkey kz,90:getkey kl,37:getkey kr,39
		if kd=0:kdtime=35
		if kdtime<0:kd=0:kdtime=5
		if ku=0:kutime=35
		if kutime<0:ku=0:kutime=5
		kdtime-:kutime-
		if ku=0:kul=0
		if kul=1:ku=0
		if ku=1:kul=1
		if kd=0:kdl=0
		if kdl=1:kd=0
		if kd=1:kdl=1
		if kx=0:kxl=0
		if kxl=1:kx=0
		if kx=1:kxl=1
		if kz=0:kzl=0
		if kzl=1:kz=0
		if kz=1:kzl=1
		if kx=1 & p3=1 & mode!p2:mode=p2:kx=0
		if ku=1:mode-:returns@ = -1
		if kd=1:mode+:returns@ = 1
		if mode<0:mode=p2:mode_set@ = 1
		if mode>p2:mode=0:mode_set@ = 1
		if kz = 1:key_z@ = 1
		if kx = 1:key_x@ = 1
	}
	return mode
#global

#module
#defcfunc select_mode2 int p1,int p2,int p3
	mode = p1
	key_z@ = 0
	key_x@ = 0
	mode_set@ = 0
	if ginfo(2)=0{
		getkey ku,37:getkey kd,39:getkey kx,88:getkey kz,90:getkey kesc,27
		if kesc = 1:kx = 1
		if kd=0:kdtime=35
		if kdtime<0:kd=0:kdtime=5
		if ku=0:kutime=35
		if kutime<0:ku=0:kutime=5
		kdtime-:kutime-
		if ku=0:kul=0
		if kul=1:ku=0
		if ku=1:kul=1
		if kd=0:kdl=0
		if kdl=1:kd=0
		if kd=1:kdl=1
		if kx=0:kxl=0
		if kxl=1:kx=0
		if kx=1:kxl=1
		if kz=0:kzl=0
		if kzl=1:kz=0
		if kz=1:kzl=1
		if kx=1 & p3=1:mode=p2
		if ku=1:mode-
		if kd=1:mode+
		if mode<0:mode=p2:mode_set@ = 1
		if mode>p2:mode=0:mode_set@ = 1
		if kz = 1:key_z@ = 1
		if kx = 1:key_x@ = 1
	}
	return mode
#global

#module
#deffunc waitkey int p1
	lock = 1
	repeat
		if ginfo(2)!-1:getkey key,p1
		if key=0:lock=0
		if lock=1:key=0
		if key=1:lock=1
		if key = 1:break
		await 10
	loop
	return
#global

#module
#deffunc waitkey2 int p1

	cx = ginfo_cx + ginfo_mesx
	cy = ginfo_cy
	
	wx = ginfo_dispx
	wy = ginfo_dispy

	win = ginfo_newid
	winb = ginfo(2)
	
	buffer win,wx,wy
	pos 0,0
	gmode 0,wx,wy
	gcopy winb
	
	gsel winb

	repeat
	redraw 0
		pos 0,0
		gmode 0,wx,wy
		gcopy win
		if cnt\100<50:pos cx,cy:cmes "_"
	redraw 1
	lock=key
	if ginfo(2)!-1:getkey key,p1
	if key=0 & lock=1:break
	await 10
	loop
		pos 0,0
		gmode 0,wx,wy
		gcopy win
	return
#deffunc waitkey3 int p1
	repeat
	getkey key,p1
	if key=1:break
	await 10
	loop
	return
#deffunc waitkey4 int p1
	key=1
	waitkey p1
	repeat
	lock=key
	if ginfo(2)!-1:getkey key,p1
	if key=0 & lock=1:break
	await 10
	loop
	return
#deffunc vmes str p1//ウインドウの大きさを変えた場合上手くいかない_カレント座標は変わる
	pos ginfo_sizex,ginfo_sizey
	mes p1
	pos ginfo_sx-ginfo_mesx,ginfo_sy-ginfo_mesy
	mes p1
	return ginfo_sy-ginfo_mesy
#deffunc vmes2 str p1,int p2
	pos ginfo_sizex,ginfo_sizey
	mes p1
	pos ginfo_sx-ginfo_mesx,ginfo_sy-ginfo_mesy-p2
	mes p1
	return ginfo_sy-ginfo_mesy
#global
/*
#uselib "user32.dll"
#func   SetWindowLong "SetWindowLongA" int,int,int
#cfunc  GetWindowLong "GetWindowLongA" int,int
#define GWL_STYLE		$FFFFFFF0
#define overrapwin SetWindowLong hwnd,GWL_STYLE,GetWindowLong(hwnd,GWL_STYLE)-$1FB0000
*/
	
#module obj
#deffunc objset int p1,int p2,int p3
	mx=p1
	my=p2
	mc=p3
	return
#deffunc objcolor int p1,int p2,int p3
	sr=p1
	sg=p2
	sb=p3
	return
#deffunc objmes str p1
	cx = ginfo_cx
	cy = ginfo_cy
	r = ginfo_r
	b = ginfo_b
	g = ginfo_g
	i = 0
	pos ginfo_dispx,ginfo_dispy
	mes p1
	if mx = limit(mx,cx,ginfo_mesx+cx) & my = limit(my,cy,ginfo_mesy+cy):i = 1:color sr,sg,sb
	if i = 1 & mc = 1:i = 2
	pos cx,cy:mes p1
	color r,g,b
	return i
#deffunc objmes2 str p1
	cx = ginfo_cx
	cy = ginfo_cy
	r = ginfo_r
	b = ginfo_b
	g = ginfo_g
	i = 0
	pos ginfo_dispx,ginfo_dispy
	mes p1
	if mx = limit(mx,cx,ginfo_mesx+cx) & my = limit(my,cy,ginfo_mesy+cy):i = 1:color sr,sg,sb
	if i = 1 & mc = 1:i = 2
	if i ! 0:line cx-2,cy+ginfo_mesy,cx+ginfo_mesx,cy+ginfo_mesy
	pos cx,cy:mes p1
	color r,g,b
	return i
#deffunc objcmes str p1
	cx = ginfo_cx
	cy = ginfo_cy
	r = ginfo_r
	b = ginfo_b
	g = ginfo_g
	i = 0
	pos ginfo_dispx,ginfo_dispy
	mes p1
	if mx = limit(mx,cx,ginfo_mesx+cx) & my = limit(my,cy,ginfo_mesy+cy):i = 1:color sr,sg,sb
	if i = 1 & mc = 1:i = 2
	pos cx,cy:cmes p1,1
	color r,g,b
	return i
#deffunc objtmes str p1
	cx = ginfo_cx
	cy = ginfo_cy
	r = ginfo_r
	b = ginfo_b
	g = ginfo_g
	i = 0
	pos ginfo_dispx,ginfo_dispy
	mes p1
	if mx = limit(mx,cx-ginfo(14)/2,cx+ginfo(14)/2) & my = limit(my,cy-ginfo(15)/2,cy+ginfo(15)/2):i = 1:color sr,sg,sb
	if i = 1 & mc = 1:i = 2
	pos cx-ginfo(14)/2,cy-ginfo(15)/2:mes p1
	color r,g,b
	return i
#deffunc objctmes str p1
	cx = ginfo_cx
	cy = ginfo_cy
	r = ginfo_r
	b = ginfo_b
	g = ginfo_g
	i = 0
	pos ginfo_dispx,ginfo_dispy
	mes p1
	if mx = limit(mx,cx-ginfo(14)/2,cx+ginfo(14)/2) & my = limit(my,cy-ginfo(15)/2,cy+ginfo(15)/2):i = 1:color sr,sg,sb
	if i = 1 & mc = 1:i = 2
	pos cx-ginfo(14)/2,cy-ginfo(15)/2:cmes p1,1
	color r,g,b
	return i
#global

#module
#deffunc fbox int p1,int p2,int p3,int p4
	;X,Y,速度,描く
	cx=ginfo_cx
	cy=ginfo_cy
	b = ginfo(2)
	x=0,0,p1,p1
	y=0,p2,0,p2
	
	win = ginfo_newid	
	buffer win,p1,p2
	pos 0,0:gmode 0,p1,p2
	gcopy b
	
	win2 = ginfo_newid	
	buffer win2,p1,p2
	pos 0,0:gmode 0,p1,p2
	gcopy p4
	
	gsel b
	;消す
	repeat 255
	redraw 0
	gmode 0,p1,p2:pos 0,0:gcopy win
	gmode 4,p1,p2,cnt:gsquare -1,x,y
	redraw 1
	if cnt\p3=0:await 2
	loop
	;戻す
	repeat 255
	redraw 0
	gmode 0,p1,p2:pos 0,0:gcopy win2
	gmode 4,p1,p2,255-cnt:gsquare -1,x,y
	redraw 1
	if cnt\p3=0:await 2
	loop
	pos cx,cy
	return
	
#deffunc fbox2 int p1,int p2,int p3,int p4
	;X,Y,速度,描く
	cx=ginfo_cx
	cy=ginfo_cy
	b = ginfo(2)
	x=0,0,p1,p1
	y=0,p2,0,p2
	
	win = ginfo_newid	
	buffer win,p1,p2
	pos 0,0:gmode 0,p1,p2
	gcopy b
	
	win2 = ginfo_newid	
	buffer win2,p1,p2
	pos 0,0:gmode 0,p1,p2
	gcopy p4
	
	gsel b
	;消す
	repeat 255/5
	redraw 0
	gmode 0,p1,p2:pos 0,0:gcopy win
	gmode 4,p1,p2,cnt*5:gsquare -1,x,y
	redraw 1
	await 1000/p3
	loop
	;戻す
	repeat 255/5
	redraw 0
	gmode 0,p1,p2:pos 0,0:gcopy win2
	gmode 4,p1,p2,255-cnt*5:gsquare -1,x,y
	redraw 1
	await 1000/p3
	loop
	pos cx,cy
	return
#global

#module
#deffunc deleteobj
	exist "hsptmp"		:if strsize!-1:delete "hsptmp"
	exist "obj"			:if strsize!-1:delete "obj"
	exist "packfile"	:if strsize!-1:delete "packfile"
	;exist "hsptmp.exe"	:if strsize!-1:delete "hsptmp.exe"
	exist "start.ax"	:if strsize!-1:delete "start.ax"
	return
#global

#module
#deffunc vset
	vnoteload "環境設定.ini"
	wx@=640:wy@=480
	title_mes@=""
	repeat noteinfo(0)
	noteget data,cnt
	split data,">",mdata,sdata
	split mdata,"<",a,mdata
	split sdata,",",p1,p2,p3
	if mdata = "title":title_mes@ = str(p1)
	if mdata = "window":wx@ = int(p1):wy@ = int(p2)
	if mdata = "set":set_mes@ = str(sdata)
	if mdata = "mode":if p1 = "game" or p1 = "A":debug@ = 0:else:debug@ = 1
	loop
	screen 0,wx@,wy@
	title title_mes@
	return
#global

#module
#deffunc tscreen int p1,int p2,int p3,int p4
	screen p1,p2,p3,p4,ginfo_dispx/2-p2/2,ginfo_dispy/2-p3/2
	return
#deffunc tbgscr int p1,int p2,int p3
	bgscr p1,p2,p3,4,ginfo_dispx/2-p2/2,ginfo_dispy/2-p3/2
	return
#global

#module
#deffunc circle3 int p3,int p4
	p1 = ginfo_cx
	p2 = ginfo_cy
	circle p1-p3,p2-p3,p1+p3,p2+p3,p4
	return
#global

#module
#uselib "user32.dll"
#func   SetWindowLong "SetWindowLongA" int,int,int
#cfunc  GetWindowLong "GetWindowLongA" int,int
#define GWL_STYLE	$FFFFFFF0
#define overrapwin SetWindowLong hwnd,GWL_STYLE,GetWindowLong(hwnd,GWL_STYLE)-$1FB0000
#deffunc ovscreen int sc,int p1,int p2
	sx=ginfo(20):sy=ginfo(21)
	screen sc,sx,sy,2
	width p1,p2
	overrapwin
	gsel sc,1
	return
#global

#module
#defcfunc StrStar int p1,str p2
	i = "":if p1 <= 0:return i
	repeat p1
		i = i + p2
	loop
	return i
#deffunc edmes str p1
	s1 = ginfo(22)				;カレント座標(x)
	s2 = ginfo(23)				;カレント座標(y)
	s3 = ginfo(20)				;解像度(x)
	s4 = ginfo(21)				;解像度(y)
	pos s3,s4:mes p1			;取得用表示
	s5 = ginfo(14)	 			;表示(x)
	s6 = ginfo(15) 				;表示(y)
	pos s1-s5,s2-s6:mes p1		;メイン表示
	pos s1,s2-s6
	return
#deffunc imes str p1
	s1 = ginfo(22)				;カレント座標(x)
	s2 = ginfo(23)				;カレント座標(y)
	s3 = ginfo(20)				;解像度(x)
	s4 = ginfo(21)				;解像度(y)
	pos s3,s4:mes p1			;取得用表示
	s5 = ginfo(14)	 			;表示(x)
	pos s1-s5,s2:mes p1			;メイン表示
	return
#deffunc icmes str p1,int p2
	s1 = ginfo(22)				;カレント座標(x)
	s2 = ginfo(23)				;カレント座標(y)
	s3 = ginfo(20)				;解像度(x)
	s4 = ginfo(21)				;解像度(y)
	pos s3,s4:cmes p1,p2			;取得用表示
	s5 = ginfo(14)	 			;表示(x)
	pos s1-s5,s2:cmes p1,p2			;メイン表示
	return
#deffunc edzmes str p1,int p2
	s1 = ginfo(22)				;カレント座標(x)
	s2 = ginfo(23)				;カレント座標(y)
	s3 = ginfo(20)				;解像度(x)
	s4 = ginfo(21)				;解像度(y)
	pos s3,s4:mes p1			;取得用表示
	s5 = ginfo(14)	 			;表示(x)
	s6 = ginfo(15) 				;表示(y)
	pos s1-s5,s2-s6:zmes p1,p2		;メイン表示
	return
#deffunc edcmes str p1
	s1 = ginfo(22)				;カレント座標(x)
	s2 = ginfo(23)				;カレント座標(y)
	s3 = ginfo(20)				;解像度(x)
	s4 = ginfo(21)				;解像度(y)
	pos s3,s4:mes p1			;取得用表示
	s5 = ginfo(14)	 			;表示(x)
	s6 = ginfo(15) 				;表示(y)
	pos s1-s5,s2-s6:cmes p1,1	;メイン表示
	return
#defcfunc CommaInt int p1
	sc = p1
	len = strlen(str(sc))
	i = len/3
	if len\3 ! 0:i+
	if i < 0:i = 0
	sum=0:p = ""
	repeat i
		if cnt ! 0:p = "," + p
		f = (sc\(powf(1000,cnt)*1000)-sum)/powf(1000,cnt)
		sum+f
		g = strf("%03d",f):if cnt = i-1:g = f
		p = "" + g + p
	loop
	return p
#defcfunc CommaInt2 int p1,int p2
	sc = p1
	len = strlen(str(sc))
	i = len/3
	if len\3 ! 0:i+
	if i < 0:i = 0
	sum=0:p = ""
	repeat i
		if cnt ! 0:p = "," + p
		f = (sc\(powf(1000,cnt)*1000)-sum)/powf(1000,cnt)
		sum+f
		g = strf("%03d",f):if cnt = i-1:g = f
		p = "" + g + p
	loop
	i = len
	if p2 - i > 0{
		repeat p2 - i
			if (i + cnt)\3 = 0:p = "," + p
			p = "0" + p
		loop
	}
	return p
#defcfunc ChangeInt int p1,int p2,int p3,int p4
;現在,最大,変動率,最小
	i = p1
	if ginfo(2) >= 0{
		getkey ku,37:getkey kd,39
		if kd=0:kdtime=35
		if kdtime<0:kd=0:kdtime=5
		if ku=0:kutime=35
		if kutime<0:ku=0:kutime=5
		kdtime-:kutime-
		if ku=0:kul=0
		if kul=1:ku=0
		if ku=1:kul=1
		if kd=0:kdl=0
		if kdl=1:kd=0
		if kd=1:kdl=1
		if ku=1:i-p3
		if kd=1:i+p3
		if i < p4:i = p4
		if i > p2:i = p2
	}
	return i
#global


#module
#deffunc color16 int p1
	color p1/256/256,p1/256\256,p1\256\256
	return
#global

#module
#deffunc mkdir2 str p1
	dirlist list,"./"+p1+"",5
	if stat = 0:mkdir "./"+p1+"/"
	return
#global

#module
#defcfunc imgload str p1
	;取得
	n = ginfo_sel
	g = ginfo_newid
	file = p1
	;メイン
	buffer g:picload file
	gsel n
	return g
#defcfunc newbuffer int p1,int p2
	;取得
	n = ginfo_sel
	g = ginfo_newid
	;メイン
	screen g,p1,p2,screen_fixedsize+screen_hide
	gsel n
	return g
/*#defcfunc newbuffer int p1,int p2
	;取得
	n = ginfo_sel
	g = ginfo_newid
	;メイン
	buffer g,p1,p2
	gsel n
	return g*/
#defcfunc get_imgx int p1
	n = ginfo_sel
	gsel p1
	x = ginfo_winx
	gsel n
	return x
#defcfunc get_imgy int p1
	n = ginfo_sel
	gsel p1
	y = ginfo_winy
	gsel n
	return y
#deffunc gset int p1,int p2,int p3,int p4
	gmode limit(p1,0,7),p2,p3,limit(p4,0,255)
	return
#deffunc ImgExpansion int p1,int p2
	;取得
	n = ginfo_sel
	gsel p1
	x = ginfo_winx
	y = ginfo_winy
	;メイン
	buffer ArtTemp@,x,y
	pos 0,0:gmode 0,x,y:gcopy p1
	buffer p1,x*p2,y*p2
	pos 0,0:gzoom x*p2,y*p2,ArtTemp@,0,0,x,y,1
	gsel n
	return
#global

//実行時自動実行 (実行ファイル作成時はOFFにする)
	;deleteobj
